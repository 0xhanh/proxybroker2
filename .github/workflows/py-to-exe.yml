# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python to executable

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10"]
        poetry-version: ["1.1.14"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install proxybroker
        run: pip install proxybroker
      - name: Install pyinstaller
        run: pip install pyinstaller
      - name: pyinstaller version
        run: pyinstaller --version
      # https://stackoverflow.com/questions/29980798/where-does-pip-install-its-packages
      # https://unix.stackexchange.com/questions/24140/return-only-the-portion-of-a-line-after-a-matching-pattern
      # https://github.com/pyinstaller/pyinstaller/issues/305 - support packing scripts build defined entry-point console_script/gui_script
      - name: Compile python to exe
        # https://stackoverflow.com/questions/41870727/pyinstaller-adding-data-files/44014560#44014560
        run: |
          if [ $RUNNER_OS == 'Windows' ]; then
            # https://github.com/python/mypy/issues/1226
            # Read the note about the difference between console_scripts and gui_scripts
            # https://setuptools.pypa.io/en/latest/userguide/entry_point.html#gui-scripts
            pyinstaller --onefile --add-binary "proxybroker/data;data" --clean $(pip show proxybroker | sed -n -e 's/^Location: //p')
          else
            # Only related to macOS
            # https://github.com/pyinstaller/pyinstaller/issues/2445
            pyinstaller --onefile --add-binary "proxybroker/data:data" --clean $(which proxybroker)
          fi
      # - name: Test proxybroker find command
        # This is the only thing we will be testing because it takes less than ~10 seconds
        # run: proxybroker find --types HTTP HTTPS --lvl High --countries US --strict -l 5
      - name: Archive proxybroker artifact
        uses: actions/upload-artifact@v3
        with:
          name: proxybroker
          path: |
            dist